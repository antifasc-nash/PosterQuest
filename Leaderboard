import React from "react";
import { base44 } from "@/api/base44Client";
import { useQuery } from "@tanstack/react-query";
import { Card, CardContent } from "@/components/ui/card";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Trophy, Medal, Award, Zap, Loader2 } from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";

export default function LeaderboardPage() {
  const { data: users = [], isLoading } = useQuery({
    queryKey: ['leaderboard'],
    queryFn: async () => {
      try {
        const allUsers = await base44.entities.User.list();
        return allUsers
          .filter(u => u.poster_count > 0)
          .sort((a, b) => (b.total_points || 0) - (a.total_points || 0));
      } catch (error) {
        console.error("Error fetching leaderboard:", error);
        return [];
      }
    },
    initialData: [],
    retry: 2,
  });

  const getRankIcon = (rank) => {
    switch(rank) {
      case 1: return <Trophy className="w-6 h-6 text-yellow-500" />;
      case 2: return <Medal className="w-6 h-6 text-gray-400" />;
      case 3: return <Award className="w-6 h-6 text-amber-600" />;
      default: return null;
    }
  };

  const getRankBg = (rank) => {
    switch(rank) {
      case 1: return "bg-gradient-to-r from-yellow-400 to-yellow-500 text-white";
      case 2: return "bg-gradient-to-r from-gray-300 to-gray-400 text-white";
      case 3: return "bg-gradient-to-r from-amber-400 to-amber-500 text-white";
      default: return "bg-white";
    }
  };

  if (isLoading) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="text-center">
          <Loader2 className="w-12 h-12 animate-spin text-blue-600 mx-auto mb-4" />
          <p className="text-gray-600">Loading leaderboard...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="p-4 max-w-4xl mx-auto pb-24 md:pb-8">
      <div className="mb-6">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">Leaderboard</h1>
        <p className="text-gray-600">Top volunteers by points earned</p>
      </div>

      <div className="space-y-3">
        {users.map((user, index) => {
          const rank = index + 1;
          return (
            <Card key={user.id} className={`${getRankBg(rank)} ${rank <= 3 ? 'shadow-lg' : ''}`}>
              <CardContent className="p-4">
                <div className="flex items-center gap-4">
                  <div className="flex items-center gap-3">
                    <div className={`w-12 h-12 rounded-full flex items-center justify-center font-bold text-xl ${rank <= 3 ? 'bg-white/20' : 'bg-gray-100 text-gray-600'}`}>
                      {rank <= 3 ? getRankIcon(rank) : `#${rank}`}
                    </div>
                    <Avatar className="w-12 h-12 border-2 border-white">
                      <AvatarImage src={user.profile_picture_url} />
                      <AvatarFallback className={rank <= 3 ? 'bg-white text-gray-900' : 'bg-gray-200 text-gray-700'}>
                        {user.full_name?.charAt(0) || 'U'}
                      </AvatarFallback>
                    </Avatar>
                  </div>
                  
                  <div className="flex-1">
                    <div className={`font-semibold ${rank <= 3 ? 'text-white' : 'text-gray-900'}`}>
                      {user.full_name}
                    </div>
                    <div className={`text-sm ${rank <= 3 ? 'text-white/80' : 'text-gray-500'}`}>
                      {user.poster_count || 0} posters placed
                    </div>
                  </div>

                  <div className="text-right">
                    <div className={`flex items-center gap-1 font-bold text-xl ${rank <= 3 ? 'text-white' : 'text-blue-600'}`}>
                      <Zap className="w-5 h-5" />
                      {user.total_points || 0}
                    </div>
                    <div className={`text-xs ${rank <= 3 ? 'text-white/80' : 'text-gray-500'}`}>
                      points
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          );
        })}

        {users.length === 0 && (
          <Card>
            <CardContent className="p-8 text-center">
              <Trophy className="w-12 h-12 text-gray-300 mx-auto mb-3" />
              <p className="text-gray-500">No one on the leaderboard yet. Be the first!</p>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
}
